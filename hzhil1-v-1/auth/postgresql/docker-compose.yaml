services:
  postgresql:
    image: postgres:16.9-alpine
    container_name: postgresql
    restart: unless-stopped
    security_opt:
      - no-new-privileges=true
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      # database1,user1,password1:database2,user2,password2:...
      - POSTGRES_MULTIPLE_DATABASES="${AUTHENTIK_POSTGRES_DB},${AUTHENTIK_POSTGRES_USER},${AUTHENTIK_POSTGRES_PASSWORD}:${OUTLINE_POSTGRES_DB},${OUTLINE_POSTGRES_USER},${OUTLINE_POSTGRES_PASSWORD}"
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: asot

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # outline database
          - network: common_backend
            container: outline
          # authentik database
          - network: common_backend
            container: authentik_server
          - network: common_backend
            container: authentik_worker
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - postgresql_data:/var/lib/postgresql/data
      - ./multidb.sh:/docker-entrypoint-initdb.d/multidb.sh
    networks:
      - backend

volumes:
  postgresql_data:
