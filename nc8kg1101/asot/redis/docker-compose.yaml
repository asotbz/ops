services:
  redis:
    # https://redis.io/docs/latest/operate/oss_and_stack/install/install-stack/docker/
    # https://github.com/redis/docker-library-redis
    # https://hub.docker.com/_/redis/tags
    image: redis:8.2.1-alpine
    container_name: redis
    restart: unless-stopped
    user: ${ASOT_UID}:${ASOT_GID}
    command: --save 60 1 --loglevel warning
    security_opt:
      - no-new-privileges=true
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: asot

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # metrics collection
          - network: common_backend
            container: redis-exporter
          # consumers
          - network: common_backend
            container: outline
          - network: common_backend
            container: authentik-server
          - network: common_backend
            container: authentik-worker
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - redis_data:/data
    networks:
      - backend
  
  redis-exporter:
    # https://github.com/oliver006/redis_exporter
    image: oliver006/redis_exporter:v1.77.0
    container_name: redis-exporter
    restart: unless-stopped
    user: ${ASOT_UID}:${ASOT_GID}
    security_opt:
      - no-new-privileges=true
    environment:
      # https://github.com/oliver006/redis_exporter?tab=readme-ov-file#command-line-flags
      - REDIS_ADDR=redis://redis:6379
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: asot

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # metrics collection
          - network: common_backend
            container: redis
          # metrics scrape
          - network: common_backend
            container: prometheus
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    networks:
      - backend

volumes:
  redis_data:
