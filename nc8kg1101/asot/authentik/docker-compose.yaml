services:
  authentik-server:
    image: ghcr.io/goauthentik/server:2025.8.4
    container_name: authentik-server
    restart: unless-stopped
    command: server
    user: ${ASOT_UID}:${ASOT_GID}
    env_file: ./authentik.env
    security_opt:
      - no-new-privileges=true
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
    volumes:
      - authentik_media:/media
      - authentik_templates:/templates
    labels:
      stack-back.volumes: true
      stack-back.volumes.include: "authentik_media,authentik_certs,authentik_templates"
      
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: asot

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.idp-http.rule: Host(`idp.${DOMAIN}`)
      traefik.http.routers.idp-http.entrypoints: http
      traefik.http.routers.idp-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first
      traefik.http.routers.idp-https.rule: Host(`idp.${DOMAIN}`)
      traefik.http.routers.idp-https.entrypoints: https
      traefik.http.routers.idp-https.tls: true
      traefik.http.routers.idp-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.idp-https.service: idp
      traefik.http.routers.idp-https.middlewares: crowdsec-bouncer

      traefik.http.services.idp.loadbalancer.server.port: 9000

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 443
              - 80
          # reverse proxy
          - network: common_backend
            container: traefik
          # database
          - network: common_backend
            container: postgres
          # cache
          - network: common_backend
            container: redis
          # worker
          - network: common_backend
            container: authentik-worker
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    networks:
      - backend
  authentik-worker:
    image: ghcr.io/goauthentik/server:2025.8.4
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    user: ${ASOT_UID}:${ASOT_GID}
    group_add:
      - ${DOCKER_GID}
    env_file:
      - ./authentik.env
      - ../.env
    security_opt:
      - no-new-privileges=true
    environment:
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: asot

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 443
              - 80
          # database
          - network: common_backend
            container: postgres
          # cache
          - network: common_backend
            container: redis
          # server
          - network: common_backend
            container: authentik-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - authentik_media:/media
      - authentik_certs:/certs
      - authentik_templates:/templates
    networks:
      - backend

volumes:
  authentik_media:
  authentik_certs:
  authentik_templates:
