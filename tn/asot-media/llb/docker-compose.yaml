services:
  lazylibrarian:
    # https://github.com/linuxserver/docker-lazylibrarian
    # https://hub.docker.com/r/linuxserver/lazylibrarian/tags
    image: ghcr.io/linuxserver/lazylibrarian:version-aaacf1d0
    container_name: lazylibrarian
    security_opt:
      - no-new-privileges=true
    restart: unless-stopped
    environment:
      - PUID=${MEDIA_UID}
      - PGID=${MEDIA_SHARED_GID}
      - TZ=${TZ}
    labels:
      # logs collection
      logging: promtail
      logging_jobname: containerlogs
      stackname: asot-media

      traefik.enable: true

      # Listen on http, but redirect all requests to https
      traefik.http.routers.llb-http.rule: Host(`llb.${DOMAIN}`)
      traefik.http.routers.llb-http.entrypoints: http
      traefik.http.routers.llb-http.middlewares: redirect-https

      # Direct all https requests to the service, checking with crowdsec first      
      traefik.http.routers.llb-https.rule: Host(`llb.${DOMAIN}`)
      traefik.http.routers.llb-https.entrypoints: https
      traefik.http.routers.llb-https.tls: true
      traefik.http.routers.llb-https.tls.certresolver: ${CERT_RESOLVER}
      traefik.http.routers.llb-https.service: llb
      traefik.http.routers.llb-https.middlewares: llb-chain

      traefik.http.services.llb.loadbalancer.server.port: 5299

      traefik.http.middlewares.llb-chain.chain.middlewares: crowdsec-bouncer,authentik

      # network policy
      whalewall.enabled: true
      whalewall.rules: |
        output:
          # DNS
          - proto: udp
            dst_ports:
              - 53
          # HTTP/S
          - proto: tcp
            dst_ports:
              - 80
              - 443
          # reverse proxy
          - network: common_backend
            container: traefik
    logging:
      driver: json-file
      options:
        max-size: 1m
        max-file: 1
        tag: "{{.Name}}"
    volumes:
      - lazylibrarian_config:/config
      - ${ZFS_POOL_ROOT_HDD}/media:/data
    networks:
      - backend

volumes:
  lazylibrarian_config:
